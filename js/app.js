
/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
import courseManager from './courseManager.js';
import adminInterface from './adminInterface.js';

// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
const homeContainer = document.getElementById('home');
const guideContainer = document.getElementById('guide');
const daySelectionContainer = document.getElementById('day-selection');
const taskSelectionContainer = document.getElementById('task-selection');
const dayHeader = document.getElementById('day-header');
const taskButtonsDiv = document.getElementById('task-buttons');
const professionSelect = document.getElementById('profession-select');
const guideTitle = document.getElementById('guide-title');
const loadingSpinner = document.getElementById('loading-spinner');
const markdownContent = document.getElementById('markdown-content');
const testButton = document.getElementById('test-button');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫—É—Ä—Å–æ–≤
  const success = await courseManager.initialize();
  if (!success) {
    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫—É—Ä—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    return;
  }
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  setupEventListeners();
  
  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  renderHomePage();
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å –æ–±–ª–∞–∫–æ–º (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
  setupCloudSync();
  
  console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –æ–±–ª–∞–∫–æ–º
function setupCloudSync() {
  const syncInterval = 60 * 1000; // 1 –º–∏–Ω—É—Ç–∞ - –±–æ–ª–µ–µ —á–∞—Å—Ç–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const syncWithCloud = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–µ–±—Ö—É–∫–æ–≤
    const webhookSettingsStr = localStorage.getItem('webhookSettings');
    let importWebhookUrl = null;
    
    if (webhookSettingsStr) {
      try {
        const webhookSettings = JSON.parse(webhookSettingsStr);
        if (webhookSettings.importUrl) {
          importWebhookUrl = webhookSettings.importUrl;
        }
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–µ–±—Ö—É–∫–æ–≤:', e);
      }
    }
    
    // –ï—Å–ª–∏ URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ webhookSettings, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    if (!importWebhookUrl) {
      importWebhookUrl = localStorage.getItem('importWebhookUrl') || 
                          localStorage.getItem('adminImportWebhook') || 
                          localStorage.getItem('testImportUrl');
    }
    
    // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω URL –∏–º–ø–æ—Ä—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (importWebhookUrl) {
      if (window.devMode && window.devMode.enabled) {
        console.log('üîß [DevMode] –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –æ–±–ª–∞–∫–æ–º');
        console.log(`üîß [DevMode] URL –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞: ${importWebhookUrl}`);
      }
      
      await tryImportFromUrl(importWebhookUrl);
    } else {
      console.log('URL –≤–µ–±—Ö—É–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞');
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ URL
  const tryImportFromUrl = async (url) => {
    console.log(`–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –æ–±–ª–∞–∫–æ–º: ${url}`);
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –≤–µ–±—Ö—É–∫–∞
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Accept': 'application/json, text/plain, */*',
          'Content-Type': 'application/json'
        },
        cache: 'no-store' // –í—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
      });
      
      if (!response.ok) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: HTTP ${response.status}`);
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
      const responseText = await response.text();
      
      // –ü—ã—Ç–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
      try {
        let importData;
        
        // –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
        try {
          importData = JSON.parse(responseText);
        } catch (jsonError) {
          console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç –∫–∞–∫ JSON, –∏—â–µ–º JSON –≤ —Ç–µ–∫—Å—Ç–µ');
          
          // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ JSON –≤ —Ç–µ–∫—Å—Ç–µ
          const jsonRegex = /{[\s\S]*}/;
          const match = responseText.match(jsonRegex);
          
          if (match && match[0]) {
            importData = JSON.parse(match[0]);
          } else {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞');
          }
        }
        
        // –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–∞—Ö –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
        let coursesData = null;
        
        // –í–∞—Ä–∏–∞–Ω—Ç 1: –ü—Ä—è–º–æ–π –æ–±—ä–µ–∫—Ç courses
        if (importData.courses) {
          coursesData = importData.courses;
          if (window.devMode && window.devMode.enabled) {
            console.log('üîß [DevMode] –ù–∞–π–¥–µ–Ω—ã –∫—É—Ä—Å—ã –≤ –ø–æ–ª–µ courses');
          }
        }
        // –í–∞—Ä–∏–∞–Ω—Ç 2: –î–∞–Ω–Ω—ã–µ –≤ –ø–æ–ª–µ data
        else if (importData.data) {
          if (typeof importData.data === 'object') {
            coursesData = importData.data;
            if (window.devMode && window.devMode.enabled) {
              console.log('üîß [DevMode] –ù–∞–π–¥–µ–Ω—ã –∫—É—Ä—Å—ã –≤ –ø–æ–ª–µ data (–æ–±—ä–µ–∫—Ç)');
            }
          } else if (typeof importData.data === 'string') {
            // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON —Å—Ç—Ä–æ–∫—É
            try {
              const parsedData = JSON.parse(importData.data);
              coursesData = parsedData.courses || parsedData;
              if (window.devMode && window.devMode.enabled) {
                console.log('üîß [DevMode] –ù–∞–π–¥–µ–Ω—ã –∫—É—Ä—Å—ã –≤ –ø–æ–ª–µ data (JSON —Å—Ç—Ä–æ–∫–∞)');
              }
            } catch (e) {
              console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –≤ –ø–æ–ª–µ data: ${e.message}`);
            }
          }
        }
        // –í–∞—Ä–∏–∞–Ω—Ç 3: –î–∞–Ω–Ω—ã–µ –≤ –ø–æ–ª–µ content –∫–∞–∫ –æ–±—ä–µ–∫—Ç
        else if (importData.content && typeof importData.content === 'object') {
          coursesData = importData.content;
          if (window.devMode && window.devMode.enabled) {
            console.log('üîß [DevMode] –ù–∞–π–¥–µ–Ω—ã –∫—É—Ä—Å—ã –≤ –ø–æ–ª–µ content (–æ–±—ä–µ–∫—Ç)');
          }
        }
        // –í–∞—Ä–∏–∞–Ω—Ç 4: –ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ root –æ–±—ä–µ–∫—Ç–∞ –∫–∞–∫ courses
        else if (typeof importData === 'object') {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
          const hasValidStructure = Object.values(importData).some(value => {
            return value && typeof value === 'object' && 
                  (value.days || value.specialLessons || value.title || value.redirectUrl || value.noDayLessons);
          });
          
          if (hasValidStructure) {
            coursesData = importData;
            if (window.devMode && window.devMode.enabled) {
              console.log('üîß [DevMode] –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫–∞–∫ courses');
            }
          }
        }
        
        if (coursesData) {
          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
          const isValid = validateCoursesStructure(coursesData);
          if (!isValid) {
            console.error('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤');
            return;
          }
          
          // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
          const currentCoursesJson = JSON.stringify(courseManager.courses);
          const newCoursesJson = JSON.stringify(coursesData);
          
          if (currentCoursesJson !== newCoursesJson) {
            if (window.devMode && window.devMode.enabled) {
              console.log('üîß [DevMode] –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –æ–±–ª–∞–∫–∞');
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            localStorage.setItem('coursesBackup', currentCoursesJson);
            localStorage.setItem('coursesBackupTimestamp', new Date().toISOString());
            
            // –ö–µ—à–∏—Ä—É–µ–º –≤—Å–µ URL –≤–µ–±—Ö—É–∫–æ–≤ –∏–∑ —É—Ä–æ–∫–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            cacheWebhookUrls(coursesData);
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            courseManager.courses = coursesData;
            
            // –ï—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫—É—Ä—Å–∞, –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            if (courseManager.currentProfession) {
              console.log('–û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –æ–±–ª–∞–∫–æ–º');
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
              const currentProfession = courseManager.currentProfession;
              const currentDayId = courseManager.currentDay ? courseManager.currentDay.id : null;
              const currentLessonId = courseManager.currentLesson ? courseManager.currentLesson.id : null;
              
              // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ
              updateProfessionSelector();
              
              // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ç—É –∂–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
              courseManager.switchProfession(currentProfession);
              
              // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π
              updateDaysList();
              
              // –ï—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω –¥–µ–Ω—å, –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–±—Ä–∞—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞
              if (currentDayId) {
                courseManager.selectDay(currentDayId);
                updateLessonsList(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤
                
                // –ï—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω —É—Ä–æ–∫, –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–±—Ä–∞—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞ –∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
                if (currentLessonId) {
                  courseManager.selectLesson(currentLessonId);
                  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞
                  if (document.getElementById('guide').classList.contains('hidden') === false) {
                    loadLessonContent();
                  }
                }
              }
            }
            
            console.log('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –æ–±–ª–∞–∫–æ–º —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω');
          } else if (window.devMode && window.devMode.enabled) {
            console.log('üîß [DevMode] –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
          }
        } else {
          console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–∞—Ö –≤ –æ—Ç–≤–µ—Ç–µ');
        }
      } catch (parseError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:', parseError);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –æ–±–ª–∞–∫–æ–º:', error);
      if (window.devMode && window.devMode.enabled) {
        console.log(`üîß [DevMode] –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${error.message}`);
      }
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
  const validateCoursesStructure = (coursesData) => {
    if (!coursesData || typeof coursesData !== 'object') {
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∫—É—Ä—Å–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    const courseKeys = Object.keys(coursesData);
    return courseKeys.length > 0 && 
      courseKeys.some(key => {
        const course = coursesData[key];
        return course && typeof course === 'object' && 
               (course.days || course.specialLessons || course.redirectUrl || course.noDayLessons);
      });
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö URL –≤–µ–±—Ö—É–∫–æ–≤ –∏–∑ —É—Ä–æ–∫–æ–≤
  const cacheWebhookUrls = (coursesData) => {
    const webhookUrls = {};
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫—É—Ä—Å–∞–º
    Object.keys(coursesData).forEach(professionId => {
      const course = coursesData[professionId];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–Ω–∏ –∏ —É—Ä–æ–∫–∏ –≤ –Ω–∏—Ö
      if (course.days && Array.isArray(course.days)) {
        course.days.forEach(day => {
          if (day.lessons && Array.isArray(day.lessons)) {
            day.lessons.forEach(lesson => {
              if (lesson.contentSource && lesson.contentSource.type === 'webhook' && lesson.contentSource.url) {
                const key = `${professionId}_${day.id}_${lesson.id}`;
                webhookUrls[key] = lesson.contentSource.url;
              }
            });
          }
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏
      if (course.specialLessons && Array.isArray(course.specialLessons)) {
        course.specialLessons.forEach(lesson => {
          if (lesson.contentSource && lesson.contentSource.type === 'webhook' && lesson.contentSource.url) {
            const key = `${professionId}_special_${lesson.id}`;
            webhookUrls[key] = lesson.contentSource.url;
          }
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–∫–∏ –±–µ–∑ –¥–Ω–µ–π
      if (course.noDayLessons && Array.isArray(course.noDayLessons)) {
        course.noDayLessons.forEach(lesson => {
          if (lesson.contentSource && lesson.contentSource.type === 'webhook' && lesson.contentSource.url) {
            const key = `${professionId}_noday_${lesson.id}`;
            webhookUrls[key] = lesson.contentSource.url;
          }
        });
      }
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–µ—à URL –≤–µ–±—Ö—É–∫–æ–≤ –≤ localStorage
    localStorage.setItem('webhookUrlsCache', JSON.stringify(webhookUrls));
    
    if (window.devMode && window.devMode.enabled) {
      console.log(`üîß [DevMode] –ö–µ—à–∏—Ä–æ–≤–∞–Ω–æ ${Object.keys(webhookUrls).length} URL –≤–µ–±—Ö—É–∫–æ–≤ –¥–ª—è —É—Ä–æ–∫–æ–≤`);
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
  const updateProfessionSelector = () => {
    const professionSelect = document.getElementById('profession-select');
    if (!professionSelect) return;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    const currentValue = professionSelect.value;
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
    const professions = courseManager.getProfessions();
    
    // –û—á–∏—â–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä
    professionSelect.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    professions.forEach(professionId => {
      const course = courseManager.courses[professionId];
      const option = document.createElement('option');
      option.value = professionId;
      option.textContent = course.title || professionId;
      professionSelect.appendChild(option);
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –≤—Å–µ –µ—â–µ –¥–æ—Å—Ç—É–ø–Ω–æ
    if (professions.includes(currentValue)) {
      professionSelect.value = currentValue;
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–Ω–µ–π
  const updateDaysList = () => {
    const daySelectionContainer = document.getElementById('day-selection');
    if (!daySelectionContainer) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π
    const days = courseManager.getDays();
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    const container = daySelectionContainer.querySelector('.content-cards') || daySelectionContainer;
    container.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è
    days.forEach(day => {
      const card = document.createElement('div');
      card.className = 'course-card';
      card.innerHTML = `
        <h3>${day.title || `–î–µ–Ω—å ${day.id}`}</h3>
        <p>${day.description || '–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—Ä–æ–∫–∏'}</p>
      `;
      card.onclick = () => selectDay(day.id);
      container.appendChild(card);
    });
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Ä–æ–∫–æ–≤
  const updateLessonsList = () => {
    if (!courseManager.currentDay) return;
    
    const taskButtonsDiv = document.getElementById('task-buttons');
    if (!taskButtonsDiv) return;
    
    // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤
    taskButtonsDiv.innerHTML = '';
    
    // –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
    const lessons = courseManager.getLessonsForCurrentDay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–∫–∞
    lessons.forEach(lesson => {
      const btn = document.createElement('button');
      btn.innerText = lesson.title;
      btn.onclick = function() { selectLesson(lesson.id); };
      taskButtonsDiv.appendChild(btn);
    });
  };
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏
  syncWithCloud();
  setInterval(syncWithCloud, syncInterval);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
  professionSelect.addEventListener('change', handleProfessionChange);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –¥–Ω—è
  document.querySelector('button[onclick="goBackToDaySelection()"]').addEventListener('click', goBackToDaySelection);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –∑–∞–¥–∞–Ω–∏—è
  document.querySelector('button[onclick="goBackToTaskSelection()"]').addEventListener('click', goBackToTaskSelection);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ª–æ–≤–∞—Ä—è
  document.querySelector('button[onclick="openVocabulary()"]').addEventListener('click', openVocabulary);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function renderHomePage() {
  showSection('home');
  daySelectionContainer.classList.remove('hidden');
  taskSelectionContainer.classList.add('hidden');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
function handleProfessionChange() {
  const selectedProfession = professionSelect.value;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
  if (courseManager.hasRedirect(selectedProfession)) {
    const redirectUrl = courseManager.getRedirectUrl(selectedProfession);
    if (redirectUrl) {
      window.location.href = redirectUrl;
      return;
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —ç—Ç—É –ø—Ä–æ—Ñ–µ—Å—Å–∏—é
  courseManager.switchProfession(selectedProfession);
  renderHomePage();
}

// –í—ã–±–æ—Ä –¥–Ω—è –æ–±—É—á–µ–Ω–∏—è
window.selectDay = function(dayId) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫—É—Ä—Å–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω—è
  const day = courseManager.selectDay(dayId);
  if (!day) {
    console.error(`–î–µ–Ω—å —Å ID ${dayId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  dayHeader.innerText = day.title;
  daySelectionContainer.classList.add('hidden');
  taskSelectionContainer.classList.remove('hidden');
  
  // –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –¥–Ω—è –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
  const lessons = courseManager.getLessonsForCurrentDay();
  taskButtonsDiv.innerHTML = '';
  lessons.forEach(lesson => {
    const btn = document.createElement('button');
    btn.innerText = lesson.title;
    btn.onclick = function() { selectLesson(lesson.id); };
    taskButtonsDiv.appendChild(btn);
  });
};

// –í—ã–±–æ—Ä —É—Ä–æ–∫–∞
window.selectLesson = function(lessonId) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫—É—Ä—Å–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–∫–∞
  const lesson = courseManager.selectLesson(lessonId);
  if (!lesson) {
    console.error(`–£—Ä–æ–∫ —Å ID ${lessonId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–∫ –∏ –ª–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  console.log(`–í—ã–±—Ä–∞–Ω —É—Ä–æ–∫: ${lesson.title} (ID: ${lesson.id})`);
  
  // –õ–æ–≥–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  if (lesson.contentSource) {
    console.log(`–ò—Å—Ç–æ—á–Ω–∏–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${lesson.contentSource.type}`);
    if (lesson.contentSource.type === 'webhook') {
      console.log(`URL –≤–µ–±—Ö—É–∫–∞: ${lesson.contentSource.url}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ URL –≤–µ–±—Ö—É–∫–∞ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
      const cacheKey = `${courseManager.currentProfession}_${courseManager.currentDay ? courseManager.currentDay.id : 'special'}_${lesson.id}`;
      const cachedUrl = getCachedWebhookUrl(cacheKey);
      
      if (cachedUrl && cachedUrl !== lesson.contentSource.url) {
        console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ URL –≤–µ–±—Ö—É–∫–∞ –¥–ª—è —É—Ä–æ–∫–∞ ${lesson.id}`);
        console.log(`–ü—Ä–µ–¥—ã–¥—É—â–∏–π URL: ${cachedUrl}`);
        console.log(`–ù–æ–≤—ã–π URL: ${lesson.contentSource.url}`);
      }
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  guideTitle.innerText = `Guide: ${lesson.title}`;
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∞—É–¥–∏–æ
  hideAllAudio();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–µ—Å—Ç–∞
  if (lesson.testSource) {
    testButton.classList.remove('hidden');
    testButton.onclick = function() {
      openTest(lesson);
    };
  } else {
    testButton.classList.add('hidden');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞—É–¥–∏–æ –¥–ª—è —É—Ä–æ–∫–∞
  const audioInfo = courseManager.getAudioInfo();
  if (audioInfo) {
    // –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∞—É–¥–∏–æ
    if (lessonId === 'vocabulary') {
      const vocabAudio = document.getElementById('audio-vocabulary');
      if (vocabAudio) {
        vocabAudio.classList.remove('hidden');
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∞—É–¥–∏–æ, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
        if (audioInfo.trackUrl) {
          const iframe = vocabAudio.querySelector('iframe');
          if (iframe && iframe.src !== audioInfo.trackUrl) {
            iframe.src = audioInfo.trackUrl;
          }
        }
      }
    } else if (lessonId === 'what-prompting-is') {
      const firstLessonAudio = document.getElementById('audio-first-lesson');
      if (firstLessonAudio) {
        firstLessonAudio.classList.remove('hidden');
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∞—É–¥–∏–æ, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
        if (audioInfo.trackUrl) {
          const iframe = firstLessonAudio.querySelector('iframe');
          if (iframe && iframe.src !== audioInfo.trackUrl) {
            iframe.src = audioInfo.trackUrl;
          }
        }
      }
    }
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–∞–π–¥–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
  showSection('guide');
  loadLessonContent();
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ URL –≤–µ–±—Ö—É–∫–∞ –ø–æ –∫–ª—é—á—É
function getCachedWebhookUrl(key) {
  try {
    const cacheStr = localStorage.getItem('webhookUrlsCache');
    if (cacheStr) {
      const cache = JSON.parse(cacheStr);
      return cache[key];
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ URL –≤–µ–±—Ö—É–∫–∞:', e);
  }
  return null;
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞
function openTest(lesson) {
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –¥—Ä—É–≥—É—é –ª–æ–≥–∏–∫—É
  if (lesson.testSource && lesson.testSource.url) {
    window.open(lesson.testSource.url, '_blank');
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —É—Ä–æ–∫–∞
async function loadLessonContent() {
  loadingSpinner.classList.remove('hidden');
  markdownContent.classList.add('hidden');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä –∫—É—Ä—Å–æ–≤
    const content = await courseManager.fetchLessonContent();
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    const formattedHTML = createCollapsibleBlocks(content);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    markdownContent.innerHTML = formattedHTML;
    loadingSpinner.classList.add('hidden');
    markdownContent.classList.remove('hidden');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞
    const task = courseManager.getTask();
    if (task) {
      // –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
      const taskHTML = marked.parse(task);
      const taskSection = document.createElement('div');
      taskSection.className = 'task-section';
      taskSection.innerHTML = `
        <h2>Practical Task</h2>
        <div class="task-content">${taskHTML}</div>
      `;
      markdownContent.appendChild(taskSection);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —É—Ä–æ–∫–∞:', error);
    markdownContent.innerHTML = `
      <div style="background-color: #fff0f0; padding: 15px; border-left: 4px solid #ff0000; margin-bottom: 20px;">
        <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</h3>
        <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é –∫–æ–º–∞–Ω–¥—ã.</p>
        <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${error.message || error.toString()}</p>
      </div>
    `;
    loadingSpinner.classList.add('hidden');
    markdownContent.classList.remove('hidden');
  }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ª–æ–≤–∞—Ä—è
window.openVocabulary = function() {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —É—Ä–æ–∫ "vocabulary"
  selectLesson('vocabulary');
};

// –í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –¥–Ω—è
window.goBackToDaySelection = function() {
  taskSelectionContainer.classList.add('hidden');
  daySelectionContainer.classList.remove('hidden');
};

// –í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∑–∞–¥–∞–Ω–∏—è
window.goBackToTaskSelection = function() {
  hideAllAudio();
  markdownContent.innerHTML = '';
  courseManager.currentLesson = null;
  homeContainer.classList.remove('hidden');
  if (courseManager.currentDay) {
    selectDay(courseManager.currentDay.id);
  }
  guideContainer.classList.add('hidden');
};

// –°–∫—Ä—ã—Ç—å –≤—Å–µ –∞—É–¥–∏–æ
function hideAllAudio() {
  const audioIds = [
    'audio-first-lesson',
    'audio-vocabulary'
  ];
  audioIds.forEach(id => {
    const el = document.getElementById(id);
    if (el) el.classList.add('hidden');
  });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é
function showSection(id) {
  homeContainer.classList.add('hidden');
  guideContainer.classList.add('hidden');
  
  const target = document.getElementById(id);
  if (target) target.classList.remove('hidden');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∏—Ö—Å—è –±–ª–æ–∫–æ–≤ –∏–∑ markdown
function createCollapsibleBlocks(markdown) {
  // –ò–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ createCollapsibleBlocks –∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞
  // ...
  
  // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
  return marked.parse(markdown);
}

// –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
window.openAdminPanel = function() {
  window.location.href = 'admin.html';
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', initApp);
