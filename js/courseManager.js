/**
 * Course Manager Module
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∫—É—Ä—Å–æ–≤
 */
class CourseManager {
  constructor() {
    this.courses = null;
    this.fallbacks = null;
    this.currentProfession = "prompt-engineer";
    this.currentDay = null;
    this.currentLesson = null;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –∫—É—Ä—Å–æ–≤
   */
  async initialize() {
    try {
      // –ü–æ–ª—É—á–∞–µ–º URL –≤–µ–±—Ö—É–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ localStorage
      const importWebhookUrl = localStorage.getItem('importWebhookUrl');
      
      if (window.devMode && window.devMode.enabled) {
        console.log('üîß [DevMode] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CourseManager');
        if (importWebhookUrl) {
          console.log(`üîß [DevMode] –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤–µ–±—Ö—É–∫ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞: ${importWebhookUrl}`);
        } else {
          console.log('üîß [DevMode] URL –≤–µ–±—Ö—É–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª');
        }
      }
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–æ–≤ —Å –≤–µ–±—Ö—É–∫–∞ –∏–º–ø–æ—Ä—Ç–∞, –µ—Å–ª–∏ –æ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      if (importWebhookUrl) {
        try {
          if (window.devMode && window.devMode.enabled) {
            console.log(`üîß [DevMode] –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–µ–±—Ö—É–∫ –∏–º–ø–æ—Ä—Ç–∞: ${importWebhookUrl}`);
          }
          
          const importResponse = await fetch(importWebhookUrl, {
            method: 'GET',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            }
          });
          
          if (importResponse.ok) {
            const importData = await importResponse.json();
            
            if (window.devMode && window.devMode.enabled) {
              console.log('üîß [DevMode] –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å –≤–µ–±—Ö—É–∫–∞ –∏–º–ø–æ—Ä—Ç–∞');
              console.log('üîß [DevMode] –†–∞–∑–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', JSON.stringify(importData).length, '–±–∞–π—Ç');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if (importData.courses) {
              this.courses = importData.courses;
              console.log('–ö—É—Ä—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å –≤–µ–±—Ö—É–∫–∞ –∏–º–ø–æ—Ä—Ç–∞');
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –≤ localStorage –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
              localStorage.setItem('coursesBackup', JSON.stringify(this.courses));
              localStorage.setItem('coursesBackupTimestamp', new Date().toISOString());
              
              if (window.devMode && window.devMode.enabled) {
                console.log('üîß [DevMode] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤ –≤ localStorage');
              }
            } else {
              throw new Error('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–∞—Ö');
            }
          } else {
            throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –≤–µ–±—Ö—É–∫—É –∏–º–ø–æ—Ä—Ç–∞: ${importResponse.status}`);
          }
        } catch (importError) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å –≤–µ–±—Ö—É–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', importError);
          
          if (window.devMode && window.devMode.enabled) {
            console.log(`üîß [DevMode] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å –≤–µ–±—Ö—É–∫–∞: ${importError.message}`);
            console.log('üîß [DevMode] –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞');
          }
          
          // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
          try {
            const coursesResponse = await fetch('data/courses.json');
            if (coursesResponse.ok) {
              this.courses = await coursesResponse.json();
              console.log('–ö—É—Ä—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ courses.json');
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –≤ localStorage –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
              localStorage.setItem('coursesBackup', JSON.stringify(this.courses));
              localStorage.setItem('coursesBackupTimestamp', new Date().toISOString());
              
              if (window.devMode && window.devMode.enabled) {
                console.log('üîß [DevMode] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤ –≤ localStorage');
              }
            } else {
              throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–æ–≤: ${coursesResponse.status}`);
            }
          } catch (coursesError) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ courses.json:', coursesError);
            
            // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ localStorage
            const backupStr = localStorage.getItem('coursesBackup');
            if (backupStr) {
              try {
                this.courses = JSON.parse(backupStr);
                const timestamp = localStorage.getItem('coursesBackupTimestamp') || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                console.log(`–ö—É—Ä—Å—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (${timestamp})`);
                
                if (window.devMode && window.devMode.enabled) {
                  console.log(`üîß [DevMode] –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤ –∏–∑ localStorage –æ—Ç ${timestamp}`);
                }
              } catch (backupError) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:', backupError);
                this.courses = {};
              }
            } else {
              console.warn('–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç');
              this.courses = {};
            }
          }
        }
      } else {
        // –ï—Å–ª–∏ URL –≤–µ–±—Ö—É–∫–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        try {
          if (window.devMode && window.devMode.enabled) {
            console.log('üîß [DevMode] –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ courses.json');
          }
          
          const coursesResponse = await fetch('data/courses.json');
          if (coursesResponse.ok) {
            this.courses = await coursesResponse.json();
            console.log('–ö—É—Ä—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ courses.json');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –≤ localStorage –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            localStorage.setItem('coursesBackup', JSON.stringify(this.courses));
            localStorage.setItem('coursesBackupTimestamp', new Date().toISOString());
            
            if (window.devMode && window.devMode.enabled) {
              console.log('üîß [DevMode] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤ –≤ localStorage');
            }
          } else {
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–æ–≤: ${coursesResponse.status}`);
          }
        } catch (coursesError) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ courses.json:', coursesError);
          
          // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ localStorage
          const backupStr = localStorage.getItem('coursesBackup');
          if (backupStr) {
            try {
              this.courses = JSON.parse(backupStr);
              const timestamp = localStorage.getItem('coursesBackupTimestamp') || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
              console.log(`–ö—É—Ä—Å—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (${timestamp})`);
              
              if (window.devMode && window.devMode.enabled) {
                console.log(`üîß [DevMode] –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤ –∏–∑ localStorage –æ—Ç ${timestamp}`);
              }
            } catch (backupError) {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:', backupError);
              this.courses = {};
            }
          } else {
            console.warn('–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç');
            this.courses = {};
          }
        }
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
      try {
        const fallbacksResponse = await fetch('data/fallbacks.json');
        if (fallbacksResponse.ok) {
          this.fallbacks = await fallbacksResponse.json();
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –≤ localStorage
          localStorage.setItem('fallbacksBackup', JSON.stringify(this.fallbacks));
          localStorage.setItem('fallbacksBackupTimestamp', new Date().toISOString());
        } else {
          throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç: ${fallbacksResponse.status}`);
        }
      } catch (fallbacksError) {
        console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ fallbacks.json:', fallbacksError);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ localStorage
        const backupStr = localStorage.getItem('fallbacksBackup');
        if (backupStr) {
          try {
            this.fallbacks = JSON.parse(backupStr);
            const timestamp = localStorage.getItem('fallbacksBackupTimestamp') || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
            console.log(`–†–µ–∑–µ—Ä–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –∫–æ–ø–∏–∏ (${timestamp})`);
          } catch (backupError) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', backupError);
            this.fallbacks = {};
          }
        } else {
          console.warn('–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è fallbacks –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç');
          this.fallbacks = {};
        }
      }

      console.log('CourseManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CourseManager:', error);
      return false;
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
   */
  getProfessions() {
    if (!this.courses || typeof this.courses !== 'object') {
      console.error('–û–±—ä–µ–∫—Ç courses –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º:', this.courses);
      return [];
    }
    return Object.keys(this.courses);
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é
   */
  switchProfession(professionId) {
    if (this.courses[professionId]) {
      this.currentProfession = professionId;
      this.currentDay = null;
      this.currentLesson = null;
      return true;
    }
    return false;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∏–º–µ–µ—Ç –ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è redirect URL
   */
  hasRedirect(professionId = this.currentProfession) {
    return this.courses[professionId]?.redirectUrl !== undefined;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å redirect URL –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
   */
  getRedirectUrl(professionId = this.currentProfession) {
    return this.courses[professionId]?.redirectUrl;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –¥–Ω–∏ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
   */
  getDays() {
    if (!this.courses[this.currentProfession] || !this.courses[this.currentProfession].days) {
      return [];
    }
    return this.courses[this.currentProfession].days;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏ (—Å–ª–æ–≤–∞—Ä—å –∏ —Ç.–¥.)
   */
  getSpecialLessons() {
    if (!this.courses[this.currentProfession] || !this.courses[this.currentProfession].specialLessons) {
      return [];
    }
    return this.courses[this.currentProfession].specialLessons;
  }

  /**
   * –í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å –æ–±—É—á–µ–Ω–∏—è
   */
  selectDay(dayId) {
    const day = this.getDays().find(d => d.id === dayId);
    if (day) {
      this.currentDay = day;
      this.currentLesson = null;
      return day;
    }
    return null;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —É—Ä–æ–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
   */
  getLessonsForCurrentDay() {
    if (!this.currentDay) return [];
    return this.currentDay.lessons || [];
  }

  /**
   * –í—ã–±—Ä–∞—Ç—å —É—Ä–æ–∫
   */
  selectLesson(lessonId) {
    // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ —Ç–µ–∫—É—â–µ–º –¥–Ω–µ
    if (this.currentDay) {
      const lesson = this.currentDay.lessons.find(l => l.id === lessonId);
      if (lesson) {
        this.currentLesson = lesson;
        return lesson;
      }
    }

    // –ó–∞—Ç–µ–º –∏—â–µ–º –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–æ–∫–∞—Ö
    const specialLesson = this.getSpecialLessons().find(l => l.id === lessonId);
    if (specialLesson) {
      this.currentLesson = specialLesson;
      return specialLesson;
    }

    return null;
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —É—Ä–æ–∫–∞
   */
  async fetchLessonContent() {
    if (!this.currentLesson) return null;

    const source = this.currentLesson.contentSource;
    if (!source) return null;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    this.showLoadingIndicator();

    try {
      let content = '';

      if (source.type === 'webhook' && source.url) {
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å –≤–µ–±—Ö—É–∫–∞
        try {
          // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
          if (window.devMode && window.devMode.enabled) {
            console.log(`üîß [DevMode] –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —É—Ä–æ–∫–∞ '${this.currentLesson.title}' —Å URL: ${source.url}`);
          }

          const response = await fetch(source.url);
          content = await response.text();

          // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
          if (window.devMode && window.devMode.enabled) {
            console.log(`üîß [DevMode] –ö–æ–Ω—Ç–µ–Ω—Ç —É—Ä–æ–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω (${content.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –≤–µ–±—Ö—É–∫–∞:', error);

          // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
          if (source.fallbackType === 'local' && source.fallbackId) {
            console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:', source.fallbackId);

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
            if (window.devMode && window.devMode.enabled) {
              console.log(`üîß [DevMode] –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å ID: ${source.fallbackId}`);
            }

            content = await this.fetchLocalContent(source.fallbackId);
          } else {
            throw error;
          }
        }
      } else if (source.type === 'local' && source.id) {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        if (window.devMode && window.devMode.enabled) {
          console.log(`üîß [DevMode] –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å ID: ${source.id}`);
        }

        content = await this.fetchLocalContent(source.id);
      } else if (source.type === 'markdown' && source.content) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Markdown –∫–æ–Ω—Ç–µ–Ω—Ç
        if (window.devMode && window.devMode.enabled) {
          console.log(`üîß [DevMode] –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ Markdown –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (${source.content.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
        }

        content = source.content;
      }

      // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      this.hideLoadingIndicator();

      return content;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —É—Ä–æ–∫–∞:', error);

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
      if (window.devMode && window.devMode.enabled) {
        console.log(`üîß [DevMode] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —É—Ä–æ–∫–∞: ${error.message}`);
      }

      // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      this.hideLoadingIndicator();

      throw error;
    }
  }

  async fetchTest(lesson = this.currentLesson) {
    if (!lesson || !lesson.testSource) {
      return null;
    }

    try {
      const testSource = lesson.testSource;

      // –ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ - –≤–µ–±—Ö—É–∫
      if (testSource.type === 'webhook') {
        try {
          const response = await fetch(testSource.url, {
            method: 'GET',
            headers: {
              'Accept': 'text/plain, text/markdown, application/json, */*'
            },
            mode: 'cors',
            cache: 'no-cache'
          });

          if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
          }

          let content = await response.text();

          // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ JSON, –ø–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç
          if (content.trim().startsWith('{') || content.trim().startsWith('[')) {
            try {
              const json = JSON.parse(content);
              if (json.test) content = json.test;
              else if (json.content) content = json.content;
              else if (json.markdown) content = json.markdown;
            } catch (e) {
              console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–≤–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç');
            }
          }

          return content;
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–µ—Å—Ç–∞ —Å –≤–µ–±—Ö—É–∫–∞: ${error.message}`);

          // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
          if (testSource.fallbackType === 'markdown' && testSource.fallbackId) {
            try {
              const response = await fetch(`data/tests/${testSource.fallbackId}.md`);
              if (response.ok) {
                return await response.text();
              }
            } catch (e) {
              console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: ${e.message}`);
            }
          }
        }
      }

      // –ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ - –ª–æ–∫–∞–ª—å–Ω—ã–π markdown
      else if (testSource.type === 'markdown' && testSource.id) {
        try {
          const response = await fetch(`data/tests/${testSource.id}.md`);
          if (response.ok) {
            return await response.text();
          }
        } catch (e) {
          console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: ${e.message}`);
        }
      }

      return null;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–µ—Å—Ç–∞:', error);
      return null;
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è —É—Ä–æ–∫–∞
   */
  getTask(lesson = this.currentLesson) {
    if (!lesson || !lesson.taskSource) {
      return null;
    }

    const taskSource = lesson.taskSource;

    // –ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ - –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –º–∞—Ä–∫–¥–∞—É–Ω
    if (taskSource.type === 'markdown' && taskSource.content) {
      return taskSource.content;
    }

    return null;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É–¥–∏–æ –¥–ª—è —É—Ä–æ–∫–∞
   */
  getAudioInfo(lesson = this.currentLesson) {
    if (!lesson || !lesson.audioSource) {
      return null;
    }

    return lesson.audioSource;
  }

  showLoadingIndicator() {
    //Implementation for showing loading indicator
  }

  hideLoadingIndicator() {
    //Implementation for hiding loading indicator
  }

  async fetchLocalContent(id) {
    try {
      const response = await fetch(`data/content/${id}.md`);
      if (response.ok) {
        return await response.text();
      } else {
        throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å ID ${id}: ${response.status}`);
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:", error);
      return null;
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö
   */
  saveBackup() {
    if (this.courses) {
      localStorage.setItem('coursesBackup', JSON.stringify(this.courses));
      localStorage.setItem('coursesBackupTimestamp', new Date().toISOString());
      
      if (window.devMode && window.devMode.enabled) {
        console.log('üîß [DevMode] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫—É—Ä—Å–æ–≤');
      }
    }
    
    if (this.fallbacks) {
      localStorage.setItem('fallbacksBackup', JSON.stringify(this.fallbacks));
      localStorage.setItem('fallbacksBackupTimestamp', new Date().toISOString());
    }
  }

  /**
   * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
   */
  restoreFromBackup() {
    const coursesBackup = localStorage.getItem('coursesBackup');
    const fallbacksBackup = localStorage.getItem('fallbacksBackup');
    
    let restored = false;
    
    if (coursesBackup) {
      try {
        this.courses = JSON.parse(coursesBackup);
        const timestamp = localStorage.getItem('coursesBackupTimestamp') || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        console.log(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫—É—Ä—Å—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (${timestamp})`);
        restored = true;
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:', e);
      }
    }
    
    if (fallbacksBackup) {
      try {
        this.fallbacks = JSON.parse(fallbacksBackup);
        console.log('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ –∫–æ–ø–∏–∏');
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', e);
      }
    }
    
    return restored;
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
const courseManager = new CourseManager();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∫ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export { courseManager };

// –¢–∞–∫–∂–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∫ —ç–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default courseManager;