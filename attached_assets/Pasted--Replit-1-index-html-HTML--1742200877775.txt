Ты знаешь весь проект на Replit, который состоит из следующих файлов:
1. index.html – базовая HTML-разметка с метатегами, подключениями CDN (marked.js, Font Awesome), inline-стилями и контейнерами (#app-content, #home, #guide, #day-selection, #task-selection, #global-loading-overlay и пр.).
2. css/style.css – полный набор стилей (переменные, базовые, адаптивные, стили загрузчиков, карточек, collapsible blocks и т.д.).
3. js/courseManager.js – модуль с классом CourseManager для загрузки, синхронизации и резервного копирования курсов, получения списка профессий, дней и уроков.
4. js/devMode.js – модуль режима разработчика (перехват fetch/XHR, панель логов, глобальный объект devMode).
5. js/admin.js – административный модуль (adminPanel) с горячими клавишами и UI-контролами.
6. js/app.js – основной модуль: инициализация (initApp), переключение разделов (home, day-selection, task-selection, guide), загрузка контента уроков (Markdown через createCollapsibleBlocks) и обработка событий.
7. js/fetchTests.js – скрипт для получения тестовых данных с вебхуков и сохранения их в JSON.

Задача: отредактируй текущий HTML-файл, объединив в нём весь функционал проекта так, чтобы итоговый файл был самодостаточным и работал как исходное многомодульное приложение.

Требования:
A. Стили: объединить inline-стили из index.html и содержимое css/style.css в один блок `<style>` в <head>.
B. Скрипты: встроить весь JS-код из файлов в один или несколько `<script>` блоков перед `</body>`, удалив import/export (чтобы переменные courseManager, devMode, adminPanel, app, fetchTests стали глобальными). Порядок: courseManager → devMode → admin → app → fetchTests.
C. Функциональность: итоговый файл должен поддерживать загрузку курсов (с резервным копированием), режим разработчика, админ-панель, переключение разделов (home, day-selection, task-selection, guide) и получение тестовых данных; все глобальные функции (selectDay, selectLesson, goBackToTaskSelection, openVocabulary, openAdminPanel и т.д.) должны работать корректно.
D. Общие: итоговый HTML-файл – самодостаточный (без локальных подключений, только CDN для внешних библиотек) и сохраняет все комментарии и форматирование исходного кода.

Отредактируй текущий HTML-файл, интегрировав недостающие фрагменты кода и функциональность, чтобы итоговый файл полностью воспроизводил работу исходного проекта.