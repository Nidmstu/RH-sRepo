Ты знаешь весь проект на Replit, включающий следующие файлы:
1. index.html – базовая HTML-разметка с метатегами, CDN (marked.js, Font Awesome), inline-стилями и разметкой контейнеров (#app-content, #home, #guide, #day-selection, #task-selection, #global-loading-overlay и т.д.).
2. css/style.css – полный набор стилей (переменные, базовые, адаптивные, стили загрузчиков, карточек, collapsible blocks и т.д.).
3. js/courseManager.js – модуль с классом CourseManager для загрузки, синхронизации и резервного копирования курсов, получения списка профессий, дней и уроков.
4. js/devMode.js – модуль режима разработчика (перехват fetch/XHR, панель логов, глобальный объект devMode).
5. js/admin.js – административный модуль (adminPanel) с горячими клавишами и UI-контролами.
6. js/app.js – основной модуль: инициализация (initApp), переключение между разделами (home, day-selection, task-selection, guide), загрузка контента уроков (с Markdown через createCollapsibleBlocks) и обработка событий.
7. js/fetchTests.js – скрипт для получения тестовых данных с вебхуков и сохранения их в JSON.

Задача: отредактируй текущий HTML-файл, объединив в нём весь функционал проекта так, чтобы итоговый файл был самодостаточным и работал как исходное многомодульное приложение.

Требования:
A. Стилей:
   - Объедини inline-стили из index.html и код из css/style.css в один блок `<style>` в <head>.

B. Скриптов:
   - Встроить весь JS-код из js/courseManager.js, js/devMode.js, js/admin.js, js/app.js и js/fetchTests.js в один или несколько `<script>` блоков перед </body>.
   - Удали import/export, чтобы все переменные (courseManager, devMode, adminPanel, app, fetchTests) были глобальными.
   - Соблюсти порядок: courseManager → devMode → admin → app → fetchTests.

C. Функциональность:
   - Итоговый файл должен обеспечивать загрузку курсов (с резервным копированием), работу режима разработчика, админ-панель, переключение разделов (home, day-selection, task-selection, guide) и получение тестовых данных.
   - Все глобальные функции (selectDay, selectLesson, goBackToTaskSelection, openVocabulary, openAdminPanel и т.д.) должны работать корректно.

D. Общие требования:
   - Итоговый HTML – самодостаточный (без локальных подключений, только CDN для внешних библиотек).
   - Сохрани все комментарии, форматирование и исходный код без изменений.

Отредактируй текущий HTML-файл, интегрировав недостающие фрагменты кода и функциональность, чтобы итоговый файл полностью воспроизводил работу исходного проекта.